name: Build and Release Firmware

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BUILD_VERSION: 'v${{vars.VERSION}}.${{vars.MAJOR}}.${{vars.MINOR}}.${{ github.run_number }}'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v2

    - name: Install ESP32 platform
      run: |
        arduino-cli core update-index
        arduino-cli core install esp32:esp32

    - name: Compile firmware
      run: |
        arduino-cli compile \
          --fqbn esp32:esp32:esp32c3 \
          -e \
          --output-dir firmware \
          src/main.ino

    - name: Create Git tag
      id: tag
      run: |
        TAG="${{env.BUILD_VERSION}}"
        echo "Tag name: $TAG"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "$TAG"
        git push origin "$TAG"

    - name: Create or update release
      id: release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: Release ${{ steps.tag.outputs.tag }}
        prerelease: ${{ vars.PRERELEASE }}
        draft: false
        body: Firmware build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload firmware binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: firmware/esp32.esp32c3/main.ino.bin
        asset_name: RDM_RPCC_${{env.BUILD_VERSION}}.bin
        asset_content_type: application/octet-stream
